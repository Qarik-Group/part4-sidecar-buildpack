---
resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

resources:
- name: cli
  type: git
  source:
    uri: https://github.com/cloudfoundry/cli
    branch: master
    ignore_paths:
    - bin
    - ci
    - README.md
    - .github
    - prevent_extra_args_v7.go
    - actor/v7action
    - actor/v7pushaction
    - command/v7
    - integration/v7

- name: cli-i18n
  type: git
  source:
    uri: https://github.com/cloudfoundry/cli-i18n
    branch: master

- name: cli-ci
  type: git
  source:
    uri: https://github.com/cloudfoundry/cli
    branch: master
    paths:
    - bin
    - ci

- name: cf-acceptance-tests
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-acceptance-tests
    branch: master

- name: cf-deployment-concourse-tasks
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks
    tag_filter: v8.*

- name: cf-cli-binaries
  type: s3
  source:
    bucket: ((staging-bucket-name))
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: cf-cli-binaries.tgz

- name: edge-linux-binary-32
  type: s3
  source:
    bucket: cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf-cli_edge_linux_i686.tgz
    region_name: us-west-1

- name: edge-linux-binary-64
  type: s3
  source:
    bucket: cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf-cli_edge_linux_x86-64.tgz
    region_name: us-west-1

- name: edge-osx-binary-64
  type: s3
  source:
    bucket: cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf-cli_edge_osx.tgz
    region_name: us-west-1

- name: edge-windows-binary-32
  type: s3
  source:
    bucket: cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf-cli_edge_win32.zip
    region_name: us-west-1

- name: edge-windows-binary-64
  type: s3
  source:
    bucket: cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf-cli_edge_winx64.zip
    region_name: us-west-1

- name: edge-deb-installer-32
  type: s3
  source:
    bucket: cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf-cli-installer_edge_i686.deb
    region_name: us-west-1

- name: edge-deb-installer-64
  type: s3
  source:
    bucket: cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf-cli-installer_edge_x86-64.deb
    region_name: us-west-1

- name: edge-redhat-installer-32
  type: s3
  source:
    bucket: cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf-cli-installer_edge_i686.rpm
    region_name: us-west-1

- name: edge-redhat-installer-64
  type: s3
  source:
    bucket: cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf-cli-installer_edge_x86-64.rpm
    region_name: us-west-1

- name: edge-osx-installer-64
  type: s3
  source:
    bucket: cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf-cli-installer_edge_osx.pkg
    region_name: us-west-1

- name: edge-windows-installer-32
  type: s3
  source:
    bucket: cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf-cli-installer_edge_win32.zip
    region_name: us-west-1

- name: edge-windows-installer-64
  type: s3
  source:
    bucket: cf-cli-releases
    access_key_id: ((cli-team-aws-s3-access-key-id))
    secret_access_key: ((cli-team-aws-s3-secret-access-key))
    versioned_file: master/cf-cli-installer_edge_winx64.zip
    region_name: us-west-1

- name: gcp-bosh-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/cli-pools
    private_key: ((cli-pools-github-private-key))
    branch: master
    pool: baked-potato

- name: legacy-gcp-bosh-pool
  type: pool
  source:
    uri: git@github.com:cloudfoundry/cli-pools
    private_key: ((cli-pools-github-private-key))
    branch: master
    pool: kloesse

- name: cf-cli-tracker
  type: tracker
  source:
    token: ((cf-cli-public-tracker-token))
    project_id: ((cf-cli-public-tracker-project-id))
    tracker_url: https://www.pivotaltracker.com

- name: golang
  type: docker-image
  source:
    repository: golang
    tag: 1.12

- name: baseimage
  type: docker-image
  source:
    repository: phusion/baseimage
    tag: latest

- name: cli-ci-base-dockerfile
  type: git
  source:
    uri: https://github.com/cloudfoundry/cli
    branch: master
    paths: [ci/cli-base/Dockerfile]

- name: cli-ci-package-dockerfile
  type: git
  source:
    uri: https://github.com/cloudfoundry/cli
    branch: master
    paths: [ci/cli-package/Dockerfile]

- name: cf-cli-base-image
  type: docker-image
  source:
    repository: cfcli/cli-base
    username: ((dockerhub-username))
    email: ((dockerhub-email))
    password: ((dockerhub-password))

- name: cf-cli-package-image
  type: docker-image
  source:
    repository: cfcli/cli-package
    username: ((dockerhub-username))
    email: ((dockerhub-email))
    password: ((dockerhub-password))

- name: slack-alert
  type: slack-notification
  source:
    url: ((slack-webhook-url))

- name: vars-store
  type: git
  source:
    uri: git@github.com:cloudfoundry/cli-private
    private_key: ((cli-private-github-private-key))
    branch: master

groups:
- name: cli
  jobs:
  - units
  - build-binaries
  - integration-linux
  - integration-windows
  - integration-legacy
  - cats
  - integration-experimental
  - create-installers
- name: images
  jobs:
  - create-cli-base-image
  - create-cli-package-image

jobs:
- name: units
  serial: true
  plan:
  - aggregate:
    - get: cli
      trigger: true
    - get: cli-ci
  - aggregate:
    - task: golangci-lint
      file: cli-ci/ci/cli-v7/tasks/golangci-lint.yml
      on_failure:
        put: slack-alert
        params:
          channel: '#cli-dev-internal'
          text: |
            golangci-lint failed :(
            $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME - (Viewable internally only)
    - task: units-linux
      file: cli-ci/ci/cli/tasks/units-linux.yml
      on_failure:
         put: slack-alert
         params:
           channel: '#cli-dev-internal'
           text: |
             Linux unit tests failed :(
             $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME - (Viewable internally only)
    - task: units-osx
      file: cli-ci/ci/cli/tasks/units-osx.yml
      on_failure:
         put: slack-alert
         params:
           channel: '#cli-dev-internal'
           text: |
             OS X unit tests failed :(
             $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME - (Viewable internally only)
    - task: units-windows
      tags: ["cli-windows"]
      file: cli-ci/ci/cli/tasks/units-windows.yml
      on_failure:
         put: slack-alert
         params:
           channel: '#cli-dev-internal'
           text: |
             Windows unit tests failed :(
             $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME - (Viewable internally only)

- name: build-binaries
  serial: true
  plan:
  - aggregate:
    - get: cli
      trigger: true
      passed: [units]
    - get: cli-ci
    - get: cli-i18n
  - task: build-i18n
    file: cli-ci/ci/cli/tasks/generate-i18n-resources.yml
    on_failure:
      put: slack-alert
      params:
        channel: '#cli-dev-internal'
        text: |
          i18n generation failed :(
          $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME - (Viewable internally only)
  - task: build
    file: cli-ci/ci/cli/tasks/build-binaries.yml
    on_failure:
      put: slack-alert
      params:
        channel: '#cli-dev-internal'
        text: |
          build binaries failed :(
          $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME - (Viewable internally only)
  - task: build-osx
    file: cli-ci/ci/cli/tasks/build-osx-binary.yml
    on_failure:
      put: slack-alert
      params:
        channel: '#cli-dev-internal'
        text: |
          build OS X binaries failed :(
          $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME - (Viewable internally only)
  - task: combine-binaries
    file: cli-ci/ci/cli/tasks/combine-binaries.yml
  - put: cf-cli-binaries
    params:
      file: compiled/cf-cli-binaries.tgz

- name: integration-linux
  serial: true
  plan:
  - aggregate:
    - get: cli
      passed: [build-binaries]
    - get: cf-cli-binaries
      passed: [build-binaries]
      trigger: true
    - get: cli-ci
    - get: vars-store
    - put: bosh-lock
      resource: gcp-bosh-pool
      timeout: 2h
      params:
        acquire: true
  - do:
    - task: cleanup-integration
      file: cli-ci/ci/cli/tasks/cleanup-integration.yml
    - task: integration
      file: cli-ci/ci/cli/tasks/integration-linux.yml
      on_failure:
        put: slack-alert
        params:
          channel: '#cli-dev-internal'
          text: |
            Linux integration failed :(
            $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME - (Viewable internally only)
      ensure:
        task: cleanup-integration
        file: cli-ci/ci/cli/tasks/cleanup-integration.yml
      params: &integration_params
        CF_INT_CLIENT_ID: 'potato-face'
        CF_INT_CLIENT_SECRET: ((client-secret))
        CF_INT_DOCKER_IMAGE: ((dockerhub-private-image))
        CF_INT_DOCKER_USERNAME: ((dockerhub-username))
        CF_INT_DOCKER_PASSWORD: ((dockerhub-password))
        CF_INT_IGNORE_API_VERSION_CHECK: false
  ensure:
    put: gcp-bosh-pool
    params:
      release: bosh-lock

- name: integration-windows
  serial: true
  plan:
  - aggregate:
    - get: cli
      passed: [build-binaries]
    - get: cf-cli-binaries
      passed: [build-binaries]
      trigger: true
    - get: cli-ci
    - get: vars-store
    - put: bosh-lock
      resource: gcp-bosh-pool
      timeout: 2h
      params:
        acquire: true
  - do:
    - task: cleanup-integration
      file: cli-ci/ci/cli/tasks/cleanup-integration.yml
    - task: integration
      tags: ["cli-windows"]
      file: cli-ci/ci/cli/tasks/integration-windows.yml
      params:
        <<: *integration_params
      input_mapping:
        cf-credentials: cleanup-integration-outputs
      on_failure:
        put: slack-alert
        params:
          channel: '#cli-dev-internal'
          text: |
            Windows integration failed :(
            $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME - (Viewable internally only)
      ensure:
        task: cleanup-integration
        file: cli-ci/ci/cli/tasks/cleanup-integration.yml
  ensure:
    put: gcp-bosh-pool
    params:
      release: bosh-lock

- name: integration-experimental
  serial: true
  plan:
  - aggregate:
    - get: cli
      passed: [build-binaries]
    - get: cf-cli-binaries
      passed: [build-binaries]
      trigger: true
    - get: cli-ci
    - get: vars-store
    - put: bosh-lock
      resource: gcp-bosh-pool
      timeout: 2h
      params:
        acquire: true
  - do:
    - task: cleanup-integration
      file: cli-ci/ci/cli/tasks/cleanup-integration.yml
    - task: integration-windows
      tags: ["cli-windows"]
      file: cli-ci/ci/cli/tasks/integration-experimental-windows.yml
      params:
        <<: *integration_params
      input_mapping:
        cf-credentials: cleanup-integration-outputs
      on_failure:
        put: slack-alert
        params:
          channel: '#cli-dev-internal'
          text: |
            Windows integration-experimental failed :(
            $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME - (Viewable internally only)
      ensure:
        task: cleanup-integration
        file: cli-ci/ci/cli/tasks/cleanup-integration.yml
    - task: integration-linux
      file: cli-ci/ci/cli/tasks/integration-experimental-linux.yml
      on_failure:
        put: slack-alert
        params:
          channel: '#cli-dev-internal'
          text: |
            Linux integration-experimental failed :(
            $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME - (Viewable internally only)
      ensure:
        task: cleanup-integration
        file: cli-ci/ci/cli/tasks/cleanup-integration.yml
      params:
        <<: *integration_params
  ensure:
    put: gcp-bosh-pool
    params:
      release: bosh-lock

- name: integration-legacy
  serial: true
  plan:
  - aggregate:
    - get: cli
      passed: [build-binaries]
    - get: cf-cli-binaries
      passed: [build-binaries]
      trigger: true
    - get: cli-ci
    - get: vars-store
    - put: bosh-lock
      resource: legacy-gcp-bosh-pool
      timeout: 2h
      params:
        acquire: true
  - do:
    - task: cleanup-integration
      file: cli-ci/ci/cli/tasks/cleanup-integration.yml
    - task: integration
      file: cli-ci/ci/cli/tasks/integration-linux.yml
      params:
        <<: *integration_params
        NODES: 12
      on_failure:
        put: slack-alert
        params:
          channel: '#cli-dev-internal'
          text: |
            Legacy integration failed :(
            $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME - (Viewable internally only)
      ensure:
        task: cleanup-integration
        file: cli-ci/ci/cli/tasks/cleanup-integration.yml
  ensure:
    put: legacy-gcp-bosh-pool
    params:
      release: bosh-lock

- name: create-installers
  serial: true
  plan:
  - aggregate:
    - get: cli
      passed: [integration-linux, integration-windows, integration-experimental, integration-legacy]
    - get: cf-cli-binaries
      passed: [integration-linux, integration-windows, integration-experimental, integration-legacy]
      trigger: true
    - get: cli-ci
  - task: extract-binaries
    file: cli-ci/ci/cli/tasks/extract-binaries.yml
    on_failure:
       put: slack-alert
       params:
         channel: '#cli-dev-internal'
         text: "extracting the binaries in installer creation failed :("
  - aggregate:
    - task: unix
      file: cli-ci/ci/cli/tasks/create-installers.yml
      on_failure:
         put: slack-alert
         params:
           channel: '#cli-dev-internal'
           text: "create unix installers failed :("
    - task: windows
      tags: ["cli-windows"]
      file: cli-ci/ci/cli/tasks/create-installers-windows.yml
      on_failure:
         put: slack-alert
         params:
           channel: '#cli-dev-internal'
           text: "create windows installer failed :("
  - task: package-binaries
    file: cli-ci/ci/cli/tasks/package-binaries.yml
    on_failure:
       put: slack-alert
       params:
         channel: '#cli-dev-internal'
         text: "extracting the binaries in installer creation failed :("
  - aggregate:
    - put: edge-linux-binary-32
      params:
        file: archives/cf-cli_edge_linux_i686.tgz
    - put: edge-linux-binary-64
      params:
        file: archives/cf-cli_edge_linux_x86-64.tgz
    - put: edge-osx-binary-64
      params:
        file: archives/cf-cli_edge_osx.tgz
    - put: edge-windows-binary-32
      params:
        file: archives/cf-cli_edge_win32.zip
    - put: edge-windows-binary-64
      params:
        file: archives/cf-cli_edge_winx64.zip
    - put: edge-deb-installer-32
      params:
        file: archives/cf-cli-installer_i686.deb
    - put: edge-deb-installer-64
      params:
        file: archives/cf-cli-installer_x86-64.deb
    - put: edge-redhat-installer-32
      params:
        file: archives/cf-cli-installer_i686.rpm
    - put: edge-redhat-installer-64
      params:
        file: archives/cf-cli-installer_x86-64.rpm
    - put: edge-osx-installer-64
      params:
        file: archives/cf-cli-installer_osx.pkg
    - put: edge-windows-installer-32
      params:
        file: winstallers/cf-cli-installer_win32.zip
    - put: edge-windows-installer-64
      params:
        file: winstallers/cf-cli-installer_winx64.zip
    - put: cf-cli-tracker
      params:
        repos:
        - cli

- name: cats
  serial: true
  plan:
  - aggregate:
    - get: cli
      passed: [integration-linux, integration-windows, integration-experimental, integration-legacy]
    - get: cf-acceptance-tests
    - get: cf-deployment-concourse-tasks
    - get: cf-cli-binaries
      passed: [integration-linux, integration-windows, integration-experimental, integration-legacy]
      trigger: true
    - get: cli-ci
    - get: vars-store
    - put: bosh-lock
      resource: gcp-bosh-pool
      timeout: 2h
      params:
        acquire: true
  - do:
    - task: cleanup-integration
      file: cli-ci/ci/cli/tasks/cleanup-integration.yml
    - task: config
      file: cli-ci/ci/cli/tasks/cats-config.yml
      params:
        INCLUDE_V3: true
        BROKER_START_TIMEOUT: 330
        CF_PUSH_TIMEOUT: 210
        DEFAULT_TIMEOUT: 60
        LONG_CURL_TIMEOUT: 210
    - task: extract-linux-binary
      file: cli-ci/ci/cli/tasks/extract-linux-binary.yml
    - task: run-tests
      file: cf-deployment-concourse-tasks/run-cats-with-provided-cli/task.yml
      input_mapping:
        integration-config: cats-config
        cf-cli: linux-cf-binary
      params:
        NODES: 16
        SKIP_REGEXP: "transparently proxies both reserved"
        REPORTER_CONFIG_FILE_PATH: ""
        FLAKE_ATTEMPTS: 2
      on_failure:
        put: slack-alert
        params:
          channel: '#cli-dev-internal'
          text: |
            CATs Linux failed :(
            $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME - (Viewable internally only)
  ensure:
    put: gcp-bosh-pool
    params:
      release: bosh-lock


- name: create-cli-base-image
  serial: true
  plan:
  - aggregate:
    - get: cli-ci-base-dockerfile
      trigger: true
    - get: golang
      trigger: true
      params: {save: true}
  - put: cf-cli-base-image
    params:
      load_base: golang
      build: cli-ci-base-dockerfile/ci/cli-base

- name: create-cli-package-image
  serial: true
  plan:
  - aggregate:
    - get: cli-ci-package-dockerfile
      trigger: true
    - get: baseimage
      trigger: true
      params: {save: true}
  - put: cf-cli-package-image
    params:
      load_base: baseimage
      build: cli-ci-package-dockerfile/ci/cli-package
