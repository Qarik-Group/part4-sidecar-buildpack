// Code generated by counterfeiter. DO NOT EDIT.
package v6fakes

import (
	"sync"

	"code.cloudfoundry.org/cli/actor/v3action"
	v6 "code.cloudfoundry.org/cli/command/v6"
)

type FakeResetOrgDefaultIsolationSegmentActor struct {
	ResetOrganizationDefaultIsolationSegmentStub        func(string) (v3action.Warnings, error)
	resetOrganizationDefaultIsolationSegmentMutex       sync.RWMutex
	resetOrganizationDefaultIsolationSegmentArgsForCall []struct {
		arg1 string
	}
	resetOrganizationDefaultIsolationSegmentReturns struct {
		result1 v3action.Warnings
		result2 error
	}
	resetOrganizationDefaultIsolationSegmentReturnsOnCall map[int]struct {
		result1 v3action.Warnings
		result2 error
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeResetOrgDefaultIsolationSegmentActor) ResetOrganizationDefaultIsolationSegment(arg1 string) (v3action.Warnings, error) {
	fake.resetOrganizationDefaultIsolationSegmentMutex.Lock()
	ret, specificReturn := fake.resetOrganizationDefaultIsolationSegmentReturnsOnCall[len(fake.resetOrganizationDefaultIsolationSegmentArgsForCall)]
	fake.resetOrganizationDefaultIsolationSegmentArgsForCall = append(fake.resetOrganizationDefaultIsolationSegmentArgsForCall, struct {
		arg1 string
	}{arg1})
	fake.recordInvocation("ResetOrganizationDefaultIsolationSegment", []interface{}{arg1})
	fake.resetOrganizationDefaultIsolationSegmentMutex.Unlock()
	if fake.ResetOrganizationDefaultIsolationSegmentStub != nil {
		return fake.ResetOrganizationDefaultIsolationSegmentStub(arg1)
	}
	if specificReturn {
		return ret.result1, ret.result2
	}
	fakeReturns := fake.resetOrganizationDefaultIsolationSegmentReturns
	return fakeReturns.result1, fakeReturns.result2
}

func (fake *FakeResetOrgDefaultIsolationSegmentActor) ResetOrganizationDefaultIsolationSegmentCallCount() int {
	fake.resetOrganizationDefaultIsolationSegmentMutex.RLock()
	defer fake.resetOrganizationDefaultIsolationSegmentMutex.RUnlock()
	return len(fake.resetOrganizationDefaultIsolationSegmentArgsForCall)
}

func (fake *FakeResetOrgDefaultIsolationSegmentActor) ResetOrganizationDefaultIsolationSegmentCalls(stub func(string) (v3action.Warnings, error)) {
	fake.resetOrganizationDefaultIsolationSegmentMutex.Lock()
	defer fake.resetOrganizationDefaultIsolationSegmentMutex.Unlock()
	fake.ResetOrganizationDefaultIsolationSegmentStub = stub
}

func (fake *FakeResetOrgDefaultIsolationSegmentActor) ResetOrganizationDefaultIsolationSegmentArgsForCall(i int) string {
	fake.resetOrganizationDefaultIsolationSegmentMutex.RLock()
	defer fake.resetOrganizationDefaultIsolationSegmentMutex.RUnlock()
	argsForCall := fake.resetOrganizationDefaultIsolationSegmentArgsForCall[i]
	return argsForCall.arg1
}

func (fake *FakeResetOrgDefaultIsolationSegmentActor) ResetOrganizationDefaultIsolationSegmentReturns(result1 v3action.Warnings, result2 error) {
	fake.resetOrganizationDefaultIsolationSegmentMutex.Lock()
	defer fake.resetOrganizationDefaultIsolationSegmentMutex.Unlock()
	fake.ResetOrganizationDefaultIsolationSegmentStub = nil
	fake.resetOrganizationDefaultIsolationSegmentReturns = struct {
		result1 v3action.Warnings
		result2 error
	}{result1, result2}
}

func (fake *FakeResetOrgDefaultIsolationSegmentActor) ResetOrganizationDefaultIsolationSegmentReturnsOnCall(i int, result1 v3action.Warnings, result2 error) {
	fake.resetOrganizationDefaultIsolationSegmentMutex.Lock()
	defer fake.resetOrganizationDefaultIsolationSegmentMutex.Unlock()
	fake.ResetOrganizationDefaultIsolationSegmentStub = nil
	if fake.resetOrganizationDefaultIsolationSegmentReturnsOnCall == nil {
		fake.resetOrganizationDefaultIsolationSegmentReturnsOnCall = make(map[int]struct {
			result1 v3action.Warnings
			result2 error
		})
	}
	fake.resetOrganizationDefaultIsolationSegmentReturnsOnCall[i] = struct {
		result1 v3action.Warnings
		result2 error
	}{result1, result2}
}

func (fake *FakeResetOrgDefaultIsolationSegmentActor) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.resetOrganizationDefaultIsolationSegmentMutex.RLock()
	defer fake.resetOrganizationDefaultIsolationSegmentMutex.RUnlock()
	copiedInvocations := map[string][][]interface{}{}
	for key, value := range fake.invocations {
		copiedInvocations[key] = value
	}
	return copiedInvocations
}

func (fake *FakeResetOrgDefaultIsolationSegmentActor) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ v6.ResetOrgDefaultIsolationSegmentActor = new(FakeResetOrgDefaultIsolationSegmentActor)
